"""Unit tests for Vulnerability serialization."""

from ostorlab.agent.message import serializer


def testVulnerabilityToProto_whenVulnerabilityWithRiskField_generatesProto():
    """Test serializing and deserializing vulnerability message with risk field."""
    vulnerability_data = {
        'title': 'Test Vulnerability',
        'risk_rating': 'HIGH',
        'short_description': 'This is a test vulnerability',
        'description': 'This is a detailed description of the test vulnerability',
        'recommendation': 'Fix the vulnerability',
        'technical_detail': 'Technical details about the vulnerability',
        'risk': 'This is the risk description that needs to be included',
        'dna': '12345',
        'cvss_v3_vector': '5:6:7'
    }
    
    # Serialize vulnerability
    proto_message = serializer.serialize('v3.report.vulnerability', vulnerability_data)
    raw = proto_message.SerializeToString()

    assert isinstance(raw, bytes)
    
    # Deserialize vulnerability
    unraw = serializer.deserialize('v3.report.vulnerability', raw)
    
    # Check the deserialized values
    assert unraw.title == 'Test Vulnerability'
    assert unraw.risk_rating == 0  # HIGH is 0 in the enum
    assert unraw.short_description == 'This is a test vulnerability'
    assert unraw.description == 'This is a detailed description of the test vulnerability'
    assert unraw.recommendation == 'Fix the vulnerability'
    assert unraw.technical_detail == 'Technical details about the vulnerability'
    assert unraw.risk == 'This is the risk description that needs to be included'
    assert unraw.dna == '12345'
    assert unraw.cvss_v3_vector == '5:6:7'
