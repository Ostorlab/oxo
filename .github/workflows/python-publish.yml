# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types: [published]
#    This only for the sake of testing, will be removed once it is tested
  pull_request:
    branches: [ "*" ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.1.1
      with:
        submodules: true
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
            node-version: '18.0.2'
    - name: Install Node dependencies
      run: npm install
      working-directory: src/oxotitan
    - name: Generate Nuxt
      run: npm run generate
      working-directory: src/oxotitan
    - name: Copy Nuxt output
      run: cp -r src/oxotitan/.output/public src/ostorlab/ui/static_files
    - name: Check if the files are copied in the right place
      run: ls -l src/ostorlab/ui/static_files
#    - name: Set up Python
#      uses: actions/setup-python@v5.0.0
#      with:
#        python-version: '3.x'
#    - name: Install SSH key
#      uses: shimataro/ssh-key-action@v2
#      with:
#        key: ${{ secrets.WORKFLOW_SSH_KEY }}
#        known_hosts: ${{ secrets.KNOWN_HOSTS }}
#    - name: Install dependencies
#      run: |
#        python -m pip install --upgrade pip
#        pip install build
#    - name: Build package
#      run: python -m build
#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}
#  push_to_store:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4.1.1
#
#      - name: Set up Docker Buildx
#        id: buildx
#        uses: docker/setup-buildx-action@v1
#
#      - name: Login to ostorlab store
#        uses: docker/login-action@v1
#        with:
#          username: ${{ secrets.store_user }}
#          password: ${{ secrets.store_password }}
#      - name: truncate current tag
#        run: echo "TAG=$(echo $GITHUB_REF | cut -c12-17)" >> $GITHUB_ENV
#      - name: Build image and push to ostorlab Container Registry
#        uses: docker/build-push-action@v2
#        with:
#          # relative path to the place where source code with Dockerfile is located
#          context: .
#          tags: |
#            ostorlab/oxo:${{env.TAG}}
#            ostorlab/oxo:latest
#          push: true
